name: Build

on:
  push:
    paths:
      - '**.cs'
      - '**.yml'
  pull_request:

jobs:
    draft_release:
      outputs:
        tag_name:  ${{ steps.Draft.outputs.tag_name }}
      name: Draft release
      runs-on: ubuntu-latest
      steps:
        - uses: release-drafter/release-drafter@v5
          id: Draft
          name: Draft
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    Format:
      runs-on: windows-latest
      steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Install .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format

      - name: Format
        run: dotnet-format  ${{ github.workspace }}\Serein.sln

      - name: Commit and Push
        shell: bash
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "action@github.com"
          git add -u
          git commit -m "format: Automated dotnet-format update from commit ${GITHUB_SHA} on ${GITHUB_REF}"
          git log -1
          remote_repo="https://${GITHUB_ACTOR}:${{secrets.GITHUB_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"
          git push "${remote_repo}" HEAD:${GITHUB_REF}
        continue-on-error: true

    Build:
      needs: [Format,draft_release]
      runs-on: windows-latest
      steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Install .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: '5.x'

      - name: NuGet restore
        run: nuget restore

      - name: Build the project(Release)
        run: msbuild -p:Configuration=Release Serein/Serein.csproj

      - name: Upload Serein(Release .Net Framework 4.7.2)
        uses: actions/upload-artifact@v3
        with:
          name: Serein_${{ needs.draft_release.outputs.tag_name }}_dotnetframework472
          path: ${{ github.workspace }}\Serein\bin\Release\net472

      - name: Upload Serein(Release Net6.0)
        uses: actions/upload-artifact@v3
        with:
          name: Serein_${{ needs.draft_release.outputs.tag_name }}_dotnet6
          path: ${{ github.workspace }}\Serein\bin\Release\net6.0-windows

      - name: Build the project(Debug)
        run: msbuild -p:Configuration=Debug Serein/Serein.csproj

      - name: Upload Serein(Debug)
        uses: actions/upload-artifact@v3
        with:
          name: Debug
          path: ${{ github.workspace }}\Serein\bin\Debug
      
      - name: Clean Folders
        run: rmdir /s /q ${{ github.workspace }}\Serein\bin\
        shell: cmd
      
      - name: Build the project(Serein-Console,Release)
        run: msbuild -p:Configuration=Release Serein/Serein-Console.csproj

      - name: Upload Serein(Release .Net Framework 4.7.2)
        uses: actions/upload-artifact@v3
        with:
          name: Serein-Console_${{ needs.draft_release.outputs.tag_name }}_dotnetframework472
          path: ${{ github.workspace }}\Serein\bin\Release\net472

      - name: Upload Serein(Serein-Console,Release Net6.0)
        uses: actions/upload-artifact@v3
        with:
          name: Serein-Console_${{ needs.draft_release.outputs.tag_name }}_dotnet6
          path: ${{ github.workspace }}\Serein\bin\Release\net6.0-windows

      - name: Build the project(Debug)
        run: msbuild -p:Configuration=Debug Serein/Serein-Console.csproj

      - name: Upload Serein-Console(Debug)
        uses: actions/upload-artifact@v3
        with:
          name: Serein-Console_Debug
          path: ${{ github.workspace }}\Serein\bin\Debug


    